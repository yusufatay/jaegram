"""Enhanced user data collection and Instagram integration

Revision ID: 47d1bed949ac
Revises: 979c9cf6ed66
Create Date: 2025-06-02 19:29:18.784349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '47d1bed949ac'
down_revision: Union[str, None] = '979c9cf6ed66'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instagram_connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('instagram_user_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('connection_type', sa.String(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=True),
    sa.Column('following_count', sa.Integer(), nullable=True),
    sa.Column('media_count', sa.Integer(), nullable=True),
    sa.Column('followed_back', sa.Boolean(), nullable=True),
    sa.Column('interaction_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_instagram_connections_id'), 'instagram_connections', ['id'], unique=False)
    op.create_index(op.f('ix_instagram_connections_user_id'), 'instagram_connections', ['user_id'], unique=False)
    op.create_table('instagram_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('instagram_post_id', sa.String(), nullable=False),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('media_type', sa.String(), nullable=True),
    sa.Column('media_url', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hashtags', sa.Text(), nullable=True),
    sa.Column('mentions', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('last_likes_count', sa.Integer(), nullable=True),
    sa.Column('last_comments_count', sa.Integer(), nullable=True),
    sa.Column('engagement_rate', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instagram_post_id')
    )
    op.create_index(op.f('ix_instagram_posts_id'), 'instagram_posts', ['id'], unique=False)
    op.create_index(op.f('ix_instagram_posts_user_id'), 'instagram_posts', ['user_id'], unique=False)
    op.create_table('user_activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('activity_details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('extra_metadata', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activity_logs_id'), 'user_activity_logs', ['id'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_user_id'), 'user_activity_logs', ['user_id'], unique=False)
    op.create_table('user_login_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('login_method', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_info', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('login_status', sa.String(), nullable=False),
    sa.Column('failure_reason', sa.String(), nullable=True),
    sa.Column('session_duration', sa.Integer(), nullable=True),
    sa.Column('logged_out_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('logout_method', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_login_history_id'), 'user_login_history', ['id'], unique=False)
    op.create_index(op.f('ix_user_login_history_user_id'), 'user_login_history', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_token', sa.String(), nullable=False),
    sa.Column('device_info', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    # Skip ALTER COLUMN operations for SQLite compatibility
    op.create_index(op.f('ix_daily_rewards_id'), 'daily_rewards', ['id'], unique=False)
    op.create_index(op.f('ix_daily_rewards_user_id'), 'daily_rewards', ['user_id'], unique=False)
    # Skip dropping reward_date column to maintain compatibility
    op.add_column('instagram_profiles', sa.Column('full_name', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('external_url', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('category', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('business_category_name', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('business_phone', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('business_email', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('business_address_json', sa.Text(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('is_business_account', sa.Boolean(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('is_professional_account', sa.Boolean(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('professional_conversion_suggested', sa.Boolean(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('account_type', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('avg_likes_per_post', sa.Integer(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('avg_comments_per_post', sa.Integer(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('engagement_rate', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('post_frequency', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('most_active_time', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('most_active_day', sa.String(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('most_used_hashtags', sa.Text(), nullable=True))
    op.add_column('instagram_profiles', sa.Column('content_categories', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('birth_date', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('users', sa.Column('country', sa.String(), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.add_column('users', sa.Column('timezone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('language', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('last_seen_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('login_count', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('registration_ip', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_login_ip', sa.String(), nullable=True))
    op.add_column('users', sa.Column('account_status', sa.String(), nullable=True))
    op.add_column('users', sa.Column('suspension_reason', sa.String(), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('website_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('privacy_public_profile', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('privacy_show_email', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('privacy_show_phone', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('privacy_show_stats', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('theme_preference', sa.String(), nullable=True))
    op.add_column('users', sa.Column('notification_email', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('notification_push', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('notification_sms', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('instagram_followers', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('instagram_following', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('instagram_posts_count', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('instagram_profile_pic_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('instagram_bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('instagram_is_private', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('instagram_is_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('instagram_external_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('instagram_category', sa.String(), nullable=True))
    op.add_column('users', sa.Column('instagram_contact_phone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('instagram_contact_email', sa.String(), nullable=True))
    op.add_column('users', sa.Column('instagram_business_category', sa.String(), nullable=True))
    op.add_column('users', sa.Column('instagram_connected_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('instagram_last_sync', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('instagram_sync_enabled', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'instagram_sync_enabled')
    op.drop_column('users', 'instagram_last_sync')
    op.drop_column('users', 'instagram_connected_at')
    op.drop_column('users', 'instagram_business_category')
    op.drop_column('users', 'instagram_contact_email')
    op.drop_column('users', 'instagram_contact_phone')
    op.drop_column('users', 'instagram_category')
    op.drop_column('users', 'instagram_external_url')
    op.drop_column('users', 'instagram_is_verified')
    op.drop_column('users', 'instagram_is_private')
    op.drop_column('users', 'instagram_bio')
    op.drop_column('users', 'instagram_profile_pic_url')
    op.drop_column('users', 'instagram_posts_count')
    op.drop_column('users', 'instagram_following')
    op.drop_column('users', 'instagram_followers')
    op.drop_column('users', 'notification_sms')
    op.drop_column('users', 'notification_push')
    op.drop_column('users', 'notification_email')
    op.drop_column('users', 'theme_preference')
    op.drop_column('users', 'privacy_show_stats')
    op.drop_column('users', 'privacy_show_phone')
    op.drop_column('users', 'privacy_show_email')
    op.drop_column('users', 'privacy_public_profile')
    op.drop_column('users', 'website_url')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'suspension_reason')
    op.drop_column('users', 'account_status')
    op.drop_column('users', 'last_login_ip')
    op.drop_column('users', 'registration_ip')
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'last_seen_at')
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'language')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'city')
    op.drop_column('users', 'country')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'birth_date')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('instagram_profiles', 'content_categories')
    op.drop_column('instagram_profiles', 'most_used_hashtags')
    op.drop_column('instagram_profiles', 'most_active_day')
    op.drop_column('instagram_profiles', 'most_active_time')
    op.drop_column('instagram_profiles', 'post_frequency')
    op.drop_column('instagram_profiles', 'engagement_rate')
    op.drop_column('instagram_profiles', 'avg_comments_per_post')
    op.drop_column('instagram_profiles', 'avg_likes_per_post')
    op.drop_column('instagram_profiles', 'account_type')
    op.drop_column('instagram_profiles', 'professional_conversion_suggested')
    op.drop_column('instagram_profiles', 'is_professional_account')
    op.drop_column('instagram_profiles', 'is_business_account')
    op.drop_column('instagram_profiles', 'business_address_json')
    op.drop_column('instagram_profiles', 'business_email')
    op.drop_column('instagram_profiles', 'business_phone')
    op.drop_column('instagram_profiles', 'business_category_name')
    op.drop_column('instagram_profiles', 'category')
    op.drop_column('instagram_profiles', 'external_url')
    op.drop_column('instagram_profiles', 'full_name')
    op.add_column('daily_rewards', sa.Column('reward_date', sa.DATETIME(), nullable=True))
    op.drop_index(op.f('ix_daily_rewards_user_id'), table_name='daily_rewards')
    op.drop_index(op.f('ix_daily_rewards_id'), table_name='daily_rewards')
    op.alter_column('daily_rewards', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_login_history_user_id'), table_name='user_login_history')
    op.drop_index(op.f('ix_user_login_history_id'), table_name='user_login_history')
    op.drop_table('user_login_history')
    op.drop_index(op.f('ix_user_activity_logs_user_id'), table_name='user_activity_logs')
    op.drop_index(op.f('ix_user_activity_logs_id'), table_name='user_activity_logs')
    op.drop_table('user_activity_logs')
    op.drop_index(op.f('ix_instagram_posts_user_id'), table_name='instagram_posts')
    op.drop_index(op.f('ix_instagram_posts_id'), table_name='instagram_posts')
    op.drop_table('instagram_posts')
    op.drop_index(op.f('ix_instagram_connections_user_id'), table_name='instagram_connections')
    op.drop_index(op.f('ix_instagram_connections_id'), table_name='instagram_connections')
    op.drop_table('instagram_connections')
    # ### end Alembic commands ###
