"""update_badge_table_add_missing_fields

Revision ID: 979c9cf6ed66
Revises: fbccddc6992a
Create Date: 2025-06-01 20:58:49.140127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '979c9cf6ed66'
down_revision: Union[str, None] = 'fbccddc6992a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if columns exist before adding them
    from sqlalchemy import text
    
    conn = op.get_bind()
    result = conn.execute(text("PRAGMA table_info(badges)")).fetchall()
    existing_columns = [row[1] for row in result]
    
    # Add new columns to badges table only if they don't exist
    if 'icon' not in existing_columns:
        op.add_column('badges', sa.Column('icon', sa.String(), nullable=True))
    if 'category' not in existing_columns:
        op.add_column('badges', sa.Column('category', sa.String(), nullable=True))
    if 'requirements_json' not in existing_columns:
        op.add_column('badges', sa.Column('requirements_json', sa.String(), nullable=True))
    if 'is_active' not in existing_columns:
        op.add_column('badges', sa.Column('is_active', sa.Boolean(), nullable=True))
    if 'created_at' not in existing_columns:
        op.add_column('badges', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    
    # Set default values for existing badges
    op.execute("UPDATE badges SET category = 'achievement' WHERE category IS NULL")
    op.execute("UPDATE badges SET is_active = 1 WHERE is_active IS NULL")
    op.execute("UPDATE badges SET requirements_json = '{}' WHERE requirements_json IS NULL")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove columns from badges table
    op.drop_column('badges', 'created_at')
    op.drop_column('badges', 'is_active')
    op.drop_column('badges', 'requirements_json')
    op.drop_column('badges', 'category')
    op.drop_column('badges', 'icon')
    # ### end Alembic commands ###
